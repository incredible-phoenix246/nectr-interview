{
    "abi": [
        {
            "type": "constructor",
            "inputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "BASIS_POINTS",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "SECONDS_PER_YEAR",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "accumulatedRewards",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "allowance",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "approve",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "calculateApy",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "duration",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "apy",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "claimRewards",
            "inputs": [],
            "outputs": [
                {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                },
                {
                    "name": "rewardsClaimed",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "decimals",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "emergencyWithdraw",
            "inputs": [
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getAccumulatedRewards",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "rewards",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getContractStats",
            "inputs": [],
            "outputs": [
                {
                    "name": "totalSupply_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "totalStaked_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "stakingRewardRate_",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "minimumStakeAmount_",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getMinimumStakeAmount",
            "inputs": [],
            "outputs": [
                {
                    "name": "minimum",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getPendingRewards",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "pendingRewards",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getStakedBalance",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "balance",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getStakingDuration",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "duration",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getStakingInfo",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "stakedAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "pendingRewards",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "stakingSince",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getStakingRewardRate",
            "inputs": [],
            "outputs": [
                {
                    "name": "rate",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getStakingTimestamp",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "timestamp",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getTotalStaked",
            "inputs": [],
            "outputs": [
                {
                    "name": "total",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "hasStakedTokens",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "hasStake",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "minimumStakeAmount",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "name",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "owner",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "pause",
            "inputs": [],
            "outputs": [
                {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "paused",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "renounceOwnership",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setMinimumStakeAmount",
            "inputs": [
                {
                    "name": "newMinimum",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setStakingRewardRate",
            "inputs": [
                {
                    "name": "newRate",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "stake",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "stakedBalances",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "stakingRewardRate",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "stakingTimestamp",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "symbol",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalStaked",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalSupply",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "transfer",
            "inputs": [
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferOwnership",
            "inputs": [
                {
                    "name": "newOwner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "unpause",
            "inputs": [],
            "outputs": [
                {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "unstake",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                },
                {
                    "name": "rewardsClaimed",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MinimumStakeAmountUpdated",
            "inputs": [
                {
                    "name": "oldAmount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newAmount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OwnershipTransferred",
            "inputs": [
                {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Paused",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "RewardsClaimed",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Staked",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "timestamp",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "StakingRewardRateUpdated",
            "inputs": [
                {
                    "name": "oldRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "newRate",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Unpaused",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Unstaked",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "rewards",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "ERC20InsufficientAllowance",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "allowance",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "needed",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InsufficientBalance",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "balance",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "needed",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidApprover",
            "inputs": [
                {
                    "name": "approver",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidReceiver",
            "inputs": [
                {
                    "name": "receiver",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidSender",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidSpender",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "EnforcedPause",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ExpectedPause",
            "inputs": []
        },
        {
            "type": "error",
            "name": "OwnableInvalidOwner",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "OwnableUnauthorizedAccount",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ReentrancyGuardReentrantCall",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "525:11544:24:-:0;;;860:3;825:38;;1159:16;2761:2:17;1159::24;:16;:::i;:::-;1154:21;;:2;:21;:::i;:::-;1118:57;;1634:173;;;;;;;;;;1686:10;1582:113:17;;;;;;;;;;;;;-1:-1:-1;;;1582:113:17;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:17;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:17;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:15;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:15;;1350:1;1322:31;;;4538:51:25;4511:18;;1322:31:15;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:22;2061:7;:21;1753:47:24::2;1759:10;1783:16;2761:2:17::0;1783::24::2;:16;:::i;:::-;1771:28;::::0;:9:::2;:28;:::i;:::-;1753:5;:47::i;:::-;525:11544:::0;;2912:187:15;3004:6;;;-1:-1:-1;;;;;3020:17:15;;;-1:-1:-1;;;;;;3020:17:15;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7362:208:17:-;-1:-1:-1;;;;;7432:21:17;;7428:91;;7476:32;;-1:-1:-1;;;7476:32:17;;7505:1;7476:32;;;4538:51:25;4511:18;;7476:32:17;4392:203:25;7428:91:17;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;5912:1107::-;-1:-1:-1;;;;;6001:18:17;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;5997:540:17;;-1:-1:-1;5997:540:17;;-1:-1:-1;;;;;6211:15:17;;6189:19;6211:15;;;;;;;;;;;6244:19;;;6240:115;;;6290:50;;-1:-1:-1;;;6290:50:17;;-1:-1:-1;;;;;4950:32:25;;6290:50:17;;;4932:51:25;4999:18;;;4992:34;;;5042:18;;;5035:34;;;4905:18;;6290:50:17;4730:345:25;6240:115:17;-1:-1:-1;;;;;6475:15:17;;:9;:15;;;;;;;;;;6493:19;;;;6475:37;;5997:540;-1:-1:-1;;;;;6551:16:17;;6547:425;;6714:12;:21;;;;;;;6547:425;;;-1:-1:-1;;;;;6925:13:17;;:9;:13;;;;;;;;;;:22;;;;;;6547:425;7002:2;-1:-1:-1;;;;;6987:25:17;6996:4;-1:-1:-1;;;;;6987:25:17;;7006:5;6987:25;;;;5226::25;;5214:2;5199:18;;5080:177;6987:25:17;;;;;;;;5912:1107;;;:::o;14:127:25:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:375;234:1;252:5;266:249;287:1;277:8;274:15;266:249;;;337:4;332:3;328:14;322:4;319:24;316:50;;;346:18;;:::i;:::-;396:1;386:8;382:16;379:49;;;410:16;;;;379:49;493:1;489:16;;;;;449:15;;266:249;;;146:375;;;;;;:::o;526:902::-;575:5;605:8;595:80;;-1:-1:-1;646:1:25;660:5;;595:80;694:4;684:76;;-1:-1:-1;731:1:25;745:5;;684:76;776:4;794:1;789:59;;;;862:1;857:174;;;;769:262;;789:59;819:1;810:10;;833:5;;;857:174;894:3;884:8;881:17;878:43;;;901:18;;:::i;:::-;-1:-1:-1;;957:1:25;943:16;;1016:5;;769:262;;1115:2;1105:8;1102:16;1096:3;1090:4;1087:13;1083:36;1077:2;1067:8;1064:16;1059:2;1053:4;1050:12;1046:35;1043:77;1040:203;;;-1:-1:-1;1152:19:25;;;1228:5;;1040:203;1275:42;-1:-1:-1;;1300:8:25;1294:4;1275:42;:::i;:::-;1353:6;1349:1;1345:6;1341:19;1332:7;1329:32;1326:58;;;1364:18;;:::i;:::-;1402:20;;-1:-1:-1;526:902:25;;;;;:::o;1433:140::-;1491:5;1520:47;1561:4;1551:8;1547:19;1541:4;1520:47;:::i;:::-;1511:56;1433:140;-1:-1:-1;;;1433:140:25:o;1578:168::-;1651:9;;;1682;;1699:15;;;1693:22;;1679:37;1669:71;;1720:18;;:::i;1751:127::-;1812:10;1807:3;1803:20;1800:1;1793:31;1843:4;1840:1;1833:15;1867:4;1864:1;1857:15;1883:380;1962:1;1958:12;;;;2005;;;2026:61;;2080:4;2072:6;2068:17;2058:27;;2026:61;2133:2;2125:6;2122:14;2102:18;2099:38;2096:161;;2179:10;2174:3;2170:20;2167:1;2160:31;2214:4;2211:1;2204:15;2242:4;2239:1;2232:15;2096:161;;1883:380;;;:::o;2394:518::-;2496:2;2491:3;2488:11;2485:421;;;2532:5;2529:1;2522:16;2576:4;2573:1;2563:18;2646:2;2634:10;2630:19;2627:1;2623:27;2617:4;2613:38;2682:4;2670:10;2667:20;2664:47;;;-1:-1:-1;2705:4:25;2664:47;2760:2;2755:3;2751:12;2748:1;2744:20;2738:4;2734:31;2724:41;;2815:81;2833:2;2826:5;2823:13;2815:81;;;2892:1;2878:16;;2859:1;2848:13;2815:81;;;2819:3;;2485:421;2394:518;;;:::o;3088:1299::-;3208:10;;-1:-1:-1;;;;;3230:30:25;;3227:56;;;3263:18;;:::i;:::-;3292:97;3382:6;3342:38;3374:4;3368:11;3342:38;:::i;:::-;3336:4;3292:97;:::i;:::-;3438:4;3469:2;3458:14;;3486:1;3481:649;;;;4174:1;4191:6;4188:89;;;-1:-1:-1;4243:19:25;;;4237:26;4188:89;-1:-1:-1;;3045:1:25;3041:11;;;3037:24;3033:29;3023:40;3069:1;3065:11;;;3020:57;4290:81;;3451:930;;3481:649;2341:1;2334:14;;;2378:4;2365:18;;-1:-1:-1;;3517:20:25;;;3635:222;3649:7;3646:1;3643:14;3635:222;;;3731:19;;;3725:26;3710:42;;3838:4;3823:20;;;;3791:1;3779:14;;;;3665:12;3635:222;;;3639:3;3885:6;3876:7;3873:19;3870:201;;;3946:19;;;3940:26;-1:-1:-1;;4029:1:25;4025:14;;;4041:3;4021:24;4017:37;4013:42;3998:58;3983:74;;3870:201;-1:-1:-1;;;;4117:1:25;4101:14;;;4097:22;4084:36;;-1:-1:-1;3088:1299:25:o;4600:125::-;4665:9;;;4686:10;;;4683:36;;;4699:18;;:::i;5080:177::-;525:11544:24;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561001057600080fd5b50600436106102535760003560e01c806373f273fc11610146578063a9059cbb116100c3578063e1f1c4a711610087578063e1f1c4a7146105a2578063e6a69ab8146105ab578063eacdb4b4146105b6578063f2fde38b146105be578063f6ed2017146105d1578063fd6a422d146105e457600080fd5b8063a9059cbb146104ed578063aa4704f314610500578063b7d685191461052e578063dd62ed3e14610541578063dfe6b5d61461057a57600080fd5b80638f0794fe1161010a5780638f0794fe1461047657806395ccea671461049657806395d89b41146104a9578063969de47a146104b1578063a694fc3a146104da57600080fd5b806373f273fc14610417578063817b1cd2146104375780638456cb5914610440578063852776b2146104485780638da5cb5b1461045b57600080fd5b80633765cf02116101d45780635ee09669116101985780635ee09669146103875780635f5724c1146103b05780636b036f45146103db57806370a08231146103e4578063715018a61461040d57600080fd5b80633765cf021461033a5780633a02a42d146103425780633f4ba83a1461036b5780634f3fc2df146103735780635c975abb1461037c57600080fd5b806318160ddd1161021b57806318160ddd146102de57806323b872dd146102e65780632e17de78146102f9578063313ce56714610323578063372500ab1461033257600080fd5b806306fdde03146102585780630917e77614610276578063095ea7b3146102885780630d29fcd4146102ab5780631460fa87146102be575b600080fd5b6102606105f7565b60405161026d9190611561565b60405180910390f35b600c545b60405190815260200161026d565b61029b6102963660046115c6565b610689565b604051901515815260200161026d565b61029b6102b93660046115f0565b6106a3565b61027a6102cc366004611609565b60086020526000908152604090205481565b60025461027a565b61029b6102f436600461162b565b61074f565b61030c6103073660046115f0565b610773565b60408051921515835260208301919091520161026d565b6040516012815260200161026d565b61030c610917565b600d5461027a565b61027a610350366004611609565b6001600160a01b031660009081526008602052604090205490565b61029b610a3f565b61027a600b5481565b60075460ff1661029b565b61027a610395366004611609565b6001600160a01b03166000908152600a602052604090205490565b61029b6103be366004611609565b6001600160a01b0316600090815260086020526040902054151590565b61027a600d5481565b61027a6103f2366004611609565b6001600160a01b031660009081526020819052604090205490565b610415610a57565b005b61027a610425366004611609565b600a6020526000908152604090205481565b61027a600c5481565b61029b610a6b565b61027a610456366004611668565b610a7d565b6005546040516001600160a01b03909116815260200161026d565b61027a610484366004611609565b60096020526000908152604090205481565b61029b6104a43660046115c6565b610aa1565b610260610b6e565b61027a6104bf366004611609565b6001600160a01b031660009081526009602052604090205490565b61029b6104e83660046115f0565b610b7d565b61029b6104fb3660046115c6565b610d29565b61051361050e366004611609565b610d37565b6040805193845260208401929092529082015260600161026d565b61029b61053c3660046115f0565b610dd5565b61027a61054f36600461168a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610582610e68565b60408051948552602085019390935291830152606082015260800161026d565b61027a61271081565b61027a6301e1338081565b600b5461027a565b6104156105cc366004611609565b610e8e565b61027a6105df366004611609565b610ecc565b61027a6105f2366004611609565b610fa8565b606060038054610606906116bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610632906116bd565b801561067f5780601f106106545761010080835404028352916020019161067f565b820191906000526020600020905b81548152906001019060200180831161066257829003601f168201915b5050505050905090565b600033610697818585610ff2565b60019150505b92915050565b60006106ad611004565b600082116107025760405162461bcd60e51b815260206004820152601e60248201527f4d696e696d756d206d7573742062652067726561746572207468616e2030000060448201526064015b60405180910390fd5b600d80549083905560408051828152602081018590527fe3117c3cc31e2d5d67afc8b5c366cd87a436cd3aaf93a169500733f4ebfb96ad91015b60405180910390a160019150505b919050565b60003361075d858285611031565b6107688585856110b0565b506001949350505050565b60008061077e61110f565b600083116107ce5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420756e7374616b65203020746f6b656e7300000000000000000060448201526064016106f9565b3360009081526008602052604090205483111561082d5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e74207374616b65642062616c616e6365000000000060448201526064016106f9565b61083633611139565b336000908152600a602090815260408083208054908490556008909252822080549192869261086690849061170d565b9250508190555083600c600082825461087f919061170d565b909155505033600090815260086020526040902054156108ac573360009081526009602052604090204290555b6108b73033866110b0565b80156108c7576108c73382611200565b604080518581526020810183905233917f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e910160405180910390a26001925090506109126001600655565b915091565b60008061092261110f565b336000908152600860205260409020546109715760405162461bcd60e51b815260206004820152601060248201526f139bc81d1bdad95b9cc81cdd185ad95960821b60448201526064016106f9565b61097a33611139565b336000908152600a6020526040902054806109cd5760405162461bcd60e51b81526020600482015260136024820152724e6f207265776172647320746f20636c61696d60681b60448201526064016106f9565b336000818152600a60209081526040808320839055600990915290204290556109f69082611200565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a2600192509050610a3b6001600655565b9091565b6000610a49611004565b610a5161123a565b50600190565b610a5f611004565b610a69600061128c565b565b6000610a75611004565b610a516112de565b6000821580610a8a575081155b15610a975750600061069d565b50600b5492915050565b6000610aab611004565b610ab361131b565b6001600160a01b038316610afb5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016106f9565b30600090815260208190526040902054821115610b5a5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e636500000060448201526064016106f9565b610b653084846110b0565b50600192915050565b606060048054610606906116bd565b6000610b8761110f565b610b8f61133e565b60008211610bd75760405162461bcd60e51b815260206004820152601560248201527443616e6e6f74207374616b65203020746f6b656e7360581b60448201526064016106f9565b600d54821015610c295760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e742062656c6f77206d696e696d756d207374616b6500000000000060448201526064016106f9565b33600090815260208190526040902054821115610c7f5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016106f9565b610c8833611139565b610c933330846110b0565b3360009081526008602052604081208054849290610cb2908490611720565b9250508190555081600c6000828254610ccb9190611720565b90915550503360008181526009602090815260409182902042908190558251868152918201527f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90910160405180910390a250600161074a6001600655565b6000336106978185856110b0565b6001600160a01b03811660008181526008602052604080822054905163f6ed201760e01b81526004810193909352918190309063f6ed201790602401602060405180830381865afa158015610d90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db49190611733565b6001600160a01b039094166000908152600960205260409020549294915050565b6000610ddf611004565b6107d0821115610e2a5760405162461bcd60e51b8152602060048201526016602482015275526174652063616e6e6f74206578636565642032302560501b60448201526064016106f9565b600b80549083905560408051828152602081018590527fc68458eaf1fcc6681f9b18ea24bddb0641c40c625df6c1e5b72f865224b5d9c9910161073c565b600080600080610e7760025490565b9350600c549250600b549150600d54905090919293565b610e96611004565b6001600160a01b038116610ec057604051631e4fbdf760e01b8152600060048201526024016106f9565b610ec98161128c565b50565b6001600160a01b0381166000908152600860205260408120548103610f0757506001600160a01b03166000908152600a602052604090205490565b6001600160a01b038216600090815260096020526040812054610f2a904261170d565b90506000610f3e6301e1338061271061174c565b600b546001600160a01b0386166000908152600860205260409020548491610f659161174c565b610f6f919061174c565b610f799190611763565b6001600160a01b0385166000908152600a6020526040902054909150610fa0908290611720565b949350505050565b6001600160a01b0381166000908152600960205260408120548103610fcf57506000919050565b6001600160a01b03821660009081526009602052604090205461069d904261170d565b610fff8383836001611362565b505050565b6005546001600160a01b03163314610a695760405163118cdaa760e01b81523360048201526024016106f9565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156110aa578181101561109b57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016106f9565b6110aa84848484036000611362565b50505050565b6001600160a01b0383166110da57604051634b637e8f60e11b8152600060048201526024016106f9565b6001600160a01b0382166111045760405163ec442f0560e01b8152600060048201526024016106f9565b610fff838383611437565b60026006540361113257604051633ee5aeb560e01b815260040160405180910390fd5b6002600655565b6001600160a01b03811660009081526008602052604090205415610ec9576001600160a01b03811660009081526009602052604081205461117a904261170d565b9050600061118e6301e1338061271061174c565b600b546001600160a01b03851660009081526008602052604090205484916111b59161174c565b6111bf919061174c565b6111c99190611763565b6001600160a01b0384166000908152600a60205260408120805492935083929091906111f6908490611720565b9091555050505050565b6001600160a01b03821661122a5760405163ec442f0560e01b8152600060048201526024016106f9565b61123660008383611437565b5050565b61124261131b565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6112e661133e565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861126f3390565b60075460ff16610a6957604051638dfc202b60e01b815260040160405180910390fd5b60075460ff1615610a695760405163d93c066560e01b815260040160405180910390fd5b6001600160a01b03841661138c5760405163e602df0560e01b8152600060048201526024016106f9565b6001600160a01b0383166113b657604051634a1406b160e11b8152600060048201526024016106f9565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156110aa57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161142991815260200190565b60405180910390a350505050565b6001600160a01b0383166114625780600260008282546114579190611720565b909155506114d49050565b6001600160a01b038316600090815260208190526040902054818110156114b55760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016106f9565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166114f05760028054829003905561150f565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161155491815260200190565b60405180910390a3505050565b602081526000825180602084015260005b8181101561158f5760208186018101516040868401015201611572565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461074a57600080fd5b600080604083850312156115d957600080fd5b6115e2836115af565b946020939093013593505050565b60006020828403121561160257600080fd5b5035919050565b60006020828403121561161b57600080fd5b611624826115af565b9392505050565b60008060006060848603121561164057600080fd5b611649846115af565b9250611657602085016115af565b929592945050506040919091013590565b6000806040838503121561167b57600080fd5b50508035926020909101359150565b6000806040838503121561169d57600080fd5b6116a6836115af565b91506116b4602084016115af565b90509250929050565b600181811c908216806116d157607f821691505b6020821081036116f157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561069d5761069d6116f7565b8082018082111561069d5761069d6116f7565b60006020828403121561174557600080fd5b5051919050565b808202811582820484141761069d5761069d6116f7565b60008261178057634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122003f56fbfbcca5db1348bfffd08191740002a45da207bc8a2d1c7bbd8d46fbdcb64736f6c634300081c0033",
        "sourceMap": "525:11544:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10604:99:24;10685:11;;10604:99;;;692:25:25;;;680:2;665:18;10604:99:24;546:177:25;3902:186:17;;;;;;:::i;:::-;;:::i;:::-;;;1376:14:25;;1369:22;1351:41;;1339:2;1324:18;3902:186:17;1211:187:25;7194:343:24;;;;;;:::i;:::-;;:::i;627:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;2803:97:17;2881:12;;2803:97;;4680:244;;;;;;:::i;:::-;;:::i;2935:1042:24:-;;;;;;:::i;:::-;;:::i;:::-;;;;2397:14:25;;2390:22;2372:41;;2444:2;2429:18;;2422:34;;;;2345:18;2935:1042:24;2204:258:25;2688:82:17;;;2761:2;2609:36:25;;2597:2;2582:18;2688:82:17;2467:184:25;4163:572:24;;;:::i;10818:115::-;10908:18;;10818:115;;9497:124;;;;;;:::i;:::-;-1:-1:-1;;;;;9594:20:24;9560:15;9594:20;;;:14;:20;;;;;;;9497:124;7874:109;;;:::i;825:38::-;;;;;;1726:84:21;1796:7;;;;1726:84;;10104:133:24;;;;;;:::i;:::-;-1:-1:-1;;;;;10206:24:24;10172:15;10206:24;;;:18;:24;;;;;;;10104:133;11480:125;;;;;;:::i;:::-;-1:-1:-1;;;;;11574:20:24;11542:13;11574:20;;;:14;:20;;;;;;:24;;;11480:125;1118:57;;;;;;2933:116:17;;;;;;:::i;:::-;-1:-1:-1;;;;;3024:18:17;2998:7;3024:18;;;;;;;;;;;;2933:116;2293:101:15;;;:::i;:::-;;739:53:24;;;;;;:::i;:::-;;;;;;;;;;;;;;1044:26;;;;;;7651:105;;;:::i;11857:210::-;;;;;;:::i;:::-;;:::i;1638:85:15:-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:15;;;3153:51:25;;3141:2;3126:18;1638:85:15;3007:203:25;682:51:24;;;;;;:::i;:::-;;;;;;;;;;;;;;8213:382;;;;;;:::i;:::-;;:::i;1962:93:17:-;;;:::i;9806:131:24:-;;;;;;:::i;:::-;-1:-1:-1;;;;;9908:22:24;9872:17;9908:22;;;:16;:22;;;;;;;9806:131;1971:736;;;;;;:::i;:::-;;:::i;3244:178:17:-;;;;;;:::i;:::-;;:::i;5639:311:24:-;;;;;;:::i;:::-;;:::i;:::-;;;;3417:25:25;;;3473:2;3458:18;;3451:34;;;;3501:18;;;3494:34;3405:2;3390:18;5639:311:24;3215:319:25;6685:334:24;;;;;;:::i;:::-;;:::i;3455:140:17:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3561:18:17;;;3535:7;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3455:140;8912:417:24;;;:::i;:::-;;;;4035:25:25;;;4091:2;4076:18;;4069:34;;;;4119:18;;;4112:34;4177:2;4162:18;;4155:34;4022:3;4007:19;8912:417:24;3804:391:25;898:45:24;;937:6;898:45;;949:61;;992:18;949:61;;10359:110;10445:17;;10359:110;;2543:215:15;;;;;;:::i;:::-;;:::i;4901:462:24:-;;;;;;:::i;:::-;;:::i;11097:222::-;;;;;;:::i;:::-;;:::i;1760:89:17:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;735:10:20;4029:31:17;735:10:20;4045:7:17;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;;:::o;7194:343:24:-;7273:12;1531:13:15;:11;:13::i;:::-;7318:1:24::1;7305:10;:14;7297:57;;;::::0;-1:-1:-1;;;7297:57:24;;4787:2:25;7297:57:24::1;::::0;::::1;4769:21:25::0;4826:2;4806:18;;;4799:30;4865:32;4845:18;;;4838:60;4915:18;;7297:57:24::1;;;;;;;;;7385:18;::::0;;7413:31;;;;7460:48:::1;::::0;;5118:25:25;;;5174:2;5159:18;;5152:34;;;7460:48:24::1;::::0;5091:18:25;7460:48:24::1;;;;;;;;7526:4;7519:11;;;1554:1:15;7194:343:24::0;;;:::o;4680:244:17:-;4767:4;735:10:20;4823:37:17;4839:4;735:10:20;4854:5:17;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;-1:-1:-1;4913:4:17;;4680:244;-1:-1:-1;;;;4680:244:17:o;2935:1042:24:-;3023:12;3037:22;2500:21:22;:19;:21::i;:::-;3092:1:24::1;3083:6;:10;3075:46;;;::::0;-1:-1:-1;;;3075:46:24;;5399:2:25;3075:46:24::1;::::0;::::1;5381:21:25::0;5438:2;5418:18;;;5411:30;5477:25;5457:18;;;5450:53;5520:18;;3075:46:24::1;5197:347:25::0;3075:46:24::1;3154:10;3139:26;::::0;;;:14:::1;:26;::::0;;;;;:36;-1:-1:-1;3139:36:24::1;3131:76;;;::::0;-1:-1:-1;;;3131:76:24;;5751:2:25;3131:76:24::1;::::0;::::1;5733:21:25::0;5790:2;5770:18;;;5763:30;5829:29;5809:18;;;5802:57;5876:18;;3131:76:24::1;5549:351:25::0;3131:76:24::1;3275:26;3290:10;3275:14;:26::i;:::-;3391:10;3354:15;3372:30:::0;;;:18:::1;:30;::::0;;;;;;;;;3412:34;;;;3488:14:::1;:26:::0;;;;;:36;;3372:30;;3518:6;;3488:36:::1;::::0;3518:6;;3488:36:::1;:::i;:::-;;;;;;;;3549:6;3534:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3585:10:24::1;3599:1;3570:26:::0;;;:14:::1;:26;::::0;;;;;:30;3566:107:::1;;3633:10;3616:28;::::0;;;:16:::1;:28;::::0;;;;3647:15:::1;3616:46:::0;;3566:107:::1;3730:44;3748:4;3755:10;3767:6;3730:9;:44::i;:::-;3821:11:::0;;3817:68:::1;;3848:26;3854:10;3866:7;3848:5;:26::i;:::-;3900:37;::::0;;5118:25:25;;;5174:2;5159:18;;5152:34;;;3909:10:24::1;::::0;3900:37:::1;::::0;5091:18:25;3900:37:24::1;;;;;;;3956:4;::::0;-1:-1:-1;3962:7:24;-1:-1:-1;2542:20:22;1857:1;3068:7;:21;2888:208;2542:20;2935:1042:24;;;:::o;4163:572::-;4218:12;4232:22;2500:21:22;:19;:21::i;:::-;4289:10:24::1;4303:1;4274:26:::0;;;:14:::1;:26;::::0;;;;;4266:59:::1;;;::::0;-1:-1:-1;;;4266:59:24;;6372:2:25;4266:59:24::1;::::0;::::1;6354:21:25::0;6411:2;6391:18;;;6384:30;-1:-1:-1;;;6430:18:25;;;6423:46;6486:18;;4266:59:24::1;6170:340:25::0;4266:59:24::1;4336:26;4351:10;4336:14;:26::i;:::-;4410:10;4373:15;4391:30:::0;;;:18:::1;:30;::::0;;;;;4439:11;4431:43:::1;;;::::0;-1:-1:-1;;;4431:43:24;;6717:2:25;4431:43:24::1;::::0;::::1;6699:21:25::0;6756:2;6736:18;;;6729:30;-1:-1:-1;;;6775:18:25;;;6768:49;6834:18;;4431:43:24::1;6515:343:25::0;4431:43:24::1;4504:10;4518:1;4485:30:::0;;;:18:::1;:30;::::0;;;;;;;:34;;;4529:16:::1;:28:::0;;;;;4560:15:::1;4529:46:::0;;4618:26:::1;::::0;4636:7;4618:5:::1;:26::i;:::-;4660:35;::::0;692:25:25;;;4675:10:24::1;::::0;4660:35:::1;::::0;680:2:25;665:18;4660:35:24::1;;;;;;;4714:4;::::0;-1:-1:-1;4720:7:24;-1:-1:-1;2542:20:22;1857:1;3068:7;:21;2888:208;2542:20;4163:572:24;;:::o;7874:109::-;7921:12;1531:13:15;:11;:13::i;:::-;7945:10:24::1;:8;:10::i;:::-;-1:-1:-1::0;7972:4:24::1;7874:109:::0;:::o;2293:101:15:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;7651:105:24:-;7696:12;1531:13:15;:11;:13::i;:::-;7720:8:24::1;:6;:8::i;11857:210::-:0;11936:11;11963;;;:28;;-1:-1:-1;11978:13:24;;11963:28;11959:67;;;-1:-1:-1;12014:1:24;12007:8;;11959:67;-1:-1:-1;12043:17:24;;11857:210;;;;:::o;8213:382::-;8361:12;1531:13:15;:11;:13::i;:::-;1597:16:21::1;:14;:16::i;:::-;-1:-1:-1::0;;;;;8397:16:24;::::2;8389:44;;;::::0;-1:-1:-1;;;8389:44:24;;7065:2:25;8389:44:24::2;::::0;::::2;7047:21:25::0;7104:2;7084:18;;;7077:30;-1:-1:-1;;;7123:18:25;;;7116:45;7178:18;;8389:44:24::2;6863:339:25::0;8389:44:24::2;8469:4;2998:7:17::0;3024:18;;;;;;;;;;;8479:6:24;-1:-1:-1;8451:34:24::2;8443:76;;;::::0;-1:-1:-1;;;8443:76:24;;7409:2:25;8443:76:24::2;::::0;::::2;7391:21:25::0;7448:2;7428:18;;;7421:30;7487:31;7467:18;;;7460:59;7536:18;;8443:76:24::2;7207:353:25::0;8443:76:24::2;8530:36;8548:4;8555:2;8559:6;8530:9;:36::i;:::-;-1:-1:-1::0;8584:4:24::2;8213:382:::0;;;;:::o;1962:93:17:-;2009:13;2041:7;2034:14;;;;;:::i;1971:736:24:-;2047:12;2500:21:22;:19;:21::i;:::-;1350:19:21::1;:17;:19::i;:::-;2088:1:24::2;2079:6;:10;2071:44;;;::::0;-1:-1:-1;;;2071:44:24;;7767:2:25;2071:44:24::2;::::0;::::2;7749:21:25::0;7806:2;7786:18;;;7779:30;-1:-1:-1;;;7825:18:25;;;7818:51;7886:18;;2071:44:24::2;7565:345:25::0;2071:44:24::2;2143:18;;2133:6;:28;;2125:67;;;::::0;-1:-1:-1;;;2125:67:24;;8117:2:25;2125:67:24::2;::::0;::::2;8099:21:25::0;8156:2;8136:18;;;8129:30;8195:28;8175:18;;;8168:56;8241:18;;2125:67:24::2;7915:350:25::0;2125:67:24::2;2220:10;2998:7:17::0;3024:18;;;;;;;;;;;2235:6:24;-1:-1:-1;2210:31:24::2;2202:64;;;::::0;-1:-1:-1;;;2202:64:24;;8472:2:25;2202:64:24::2;::::0;::::2;8454:21:25::0;8511:2;8491:18;;;8484:30;-1:-1:-1;;;8530:18:25;;;8523:50;8590:18;;2202:64:24::2;8270:344:25::0;2202:64:24::2;2334:26;2349:10;2334:14;:26::i;:::-;2410:44;2420:10;2440:4;2447:6;2410:9;:44::i;:::-;2511:10;2496:26;::::0;;;:14:::2;:26;::::0;;;;:36;;2526:6;;2496:26;:36:::2;::::0;2526:6;;2496:36:::2;:::i;:::-;;;;;;;;2557:6;2542:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2590:10:24::2;2573:28;::::0;;;:16:::2;:28;::::0;;;;;;;;2604:15:::2;2573:46:::0;;;;2635:43;;5118:25:25;;;5159:18;;;5152:34;2635:43:24::2;::::0;5091:18:25;2635:43:24::2;;;;;;;-1:-1:-1::0;2696:4:24::2;2542:20:22::0;1857:1;3068:7;:21;2888:208;3244:178:17;3313:4;735:10:20;3367:27:17;735:10:20;3384:2:17;3388:5;3367:9;:27::i;5639:311:24:-;-1:-1:-1;;;;;5821:20:24;;5724;5821;;;:14;:20;;;;;;;5868:28;;-1:-1:-1;;;5868:28:24;;;;;3153:51:25;;;;5821:20:24;5724;;5868:4;;:22;;3126:18:25;;5868:28:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5921:22:24;;;;;;;:16;:22;;;;;;5639:311;;;-1:-1:-1;;5639:311:24:o;6685:334::-;6760:12;1531:13:15;:11;:13::i;:::-;6803:4:24::1;6792:7;:15;;6784:50;;;::::0;-1:-1:-1;;;6784:50:24;;9140:2:25;6784:50:24::1;::::0;::::1;9122:21:25::0;9179:2;9159:18;;;9152:30;-1:-1:-1;;;9198:18:25;;;9191:52;9260:18;;6784:50:24::1;8938:346:25::0;6784:50:24::1;6878:17;::::0;;6905:27;;;;6948:42:::1;::::0;;5118:25:25;;;5174:2;5159:18;;5152:34;;;6948:42:24::1;::::0;5091:18:25;6948:42:24::1;4944:248:25::0;8912:417:24;9000:20;9034;9068:26;9108:27;9175:13;2881:12:17;;;2803:97;9175:13:24;9160:28;;9213:11;;9198:26;;9255:17;;9234:38;;9304:18;;9282:40;;8912:417;;;;:::o;2543:215:15:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:15;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:15;;2700:1:::1;2672:31;::::0;::::1;3153:51:25::0;3126:18;;2672:31:15::1;3007:203:25::0;2623:91:15::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;4901:462:24:-;-1:-1:-1;;;;;5003:20:24;;4965:22;5003:20;;;:14;:20;;;;;;:25;;4999:87;;-1:-1:-1;;;;;;5051:24:24;;;;;:18;:24;;;;;;;4901:462::o;4999:87::-;-1:-1:-1;;;;;5140:22:24;;5096:23;5140:22;;;:16;:22;;;;;;5122:40;;:15;:40;:::i;:::-;5096:66;-1:-1:-1;5172:18:24;5269:31;992:18;937:6;5269:31;:::i;:::-;5217:17;;-1:-1:-1;;;;;5194:20:24;;;;;;:14;:20;;;;;;5237:15;;5194:40;;;:::i;:::-;:58;;;;:::i;:::-;5193:108;;;;:::i;:::-;-1:-1:-1;;;;;5319:24:24;;;;;;:18;:24;;;;;;5172:129;;-1:-1:-1;5319:37:24;;5172:129;;5319:37;:::i;:::-;5312:44;4901:462;-1:-1:-1;;;;4901:462:24:o;11097:222::-;-1:-1:-1;;;;;11194:22:24;;11162:16;11194:22;;;:16;:22;;;;;;:27;;11190:66;;-1:-1:-1;11244:1:24;;11097:222;-1:-1:-1;11097:222:24:o;11190:66::-;-1:-1:-1;;;;;11290:22:24;;;;;;:16;:22;;;;;;11272:40;;:15;:40;:::i;8630:128:17:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;1796:162:15:-;1710:6;;-1:-1:-1;;;;;1710:6:15;735:10:20;1855:23:15;1851:101;;1901:40;;-1:-1:-1;;;1901:40:15;;735:10:20;1901:40:15;;;3153:51:25;3126:18;;1901:40:15;3007:203:25;10319:476:17;-1:-1:-1;;;;;3561:18:17;;;10418:24;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10484:36:17;;10480:309;;;10559:5;10540:16;:24;10536:130;;;10591:60;;-1:-1:-1;;;10591:60:17;;-1:-1:-1;;;;;9904:32:25;;10591:60:17;;;9886:51:25;9953:18;;;9946:34;;;9996:18;;;9989:34;;;9859:18;;10591:60:17;9684:345:25;10536:130:17;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10408:387;10319:476;;;:::o;5297:300::-;-1:-1:-1;;;;;5380:18:17;;5376:86;;5421:30;;-1:-1:-1;;;5421:30:17;;5448:1;5421:30;;;3153:51:25;3126:18;;5421:30:17;3007:203:25;5376:86:17;-1:-1:-1;;;;;5475:16:17;;5471:86;;5514:32;;-1:-1:-1;;;5514:32:17;;5543:1;5514:32;;;3153:51:25;3126:18;;5514:32:17;3007:203:25;5471:86:17;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;2575:307:22:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:22;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;6080:383:24:-;-1:-1:-1;;;;;6141:20:24;;6164:1;6141:20;;;:14;:20;;;;;;:24;6137:320;;-1:-1:-1;;;;;6225:22:24;;6181:23;6225:22;;;:16;:22;;;;;;6207:40;;:15;:40;:::i;:::-;6181:66;-1:-1:-1;6261:18:24;6362:31;992:18;937:6;6362:31;:::i;:::-;6306:17;;-1:-1:-1;;;;;6283:20:24;;;;;;:14;:20;;;;;;6326:15;;6283:40;;;:::i;:::-;:58;;;;:::i;:::-;6282:112;;;;:::i;:::-;-1:-1:-1;;;;;6408:24:24;;;;;;:18;:24;;;;;:38;;6261:133;;-1:-1:-1;6261:133:24;;6408:24;;;:38;;6261:133;;6408:38;:::i;:::-;;;;-1:-1:-1;;;;6080:383:24;:::o;7362:208:17:-;-1:-1:-1;;;;;7432:21:17;;7428:91;;7476:32;;-1:-1:-1;;;7476:32:17;;7505:1;7476:32;;;3153:51:25;3126:18;;7476:32:17;3007:203:25;7428:91:17;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;2586:117:21:-;1597:16;:14;:16::i;:::-;2644:7:::1;:15:::0;;-1:-1:-1;;2644:15:21::1;::::0;;2674:22:::1;735:10:20::0;2683:12:21::1;2674:22;::::0;-1:-1:-1;;;;;3171:32:25;;;3153:51;;3141:2;3126:18;2674:22:21::1;;;;;;;2586:117::o:0;2912:187:15:-;3004:6;;;-1:-1:-1;;;;;3020:17:15;;;-1:-1:-1;;;;;;3020:17:15;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2339:115:21:-;1350:19;:17;:19::i;:::-;2398:7:::1;:14:::0;;-1:-1:-1;;2398:14:21::1;2408:4;2398:14;::::0;;2427:20:::1;2434:12;735:10:20::0;;656:96;2078:126:21;1796:7;;;;2136:62;;2172:15;;-1:-1:-1;;;2172:15:21;;;;;;;;;;;1878:128;1796:7;;;;1939:61;;;1974:15;;-1:-1:-1;;;1974:15:21;;;;;;;;;;;9605:432:17;-1:-1:-1;;;;;9717:19:17;;9713:89;;9759:32;;-1:-1:-1;;;9759:32:17;;9788:1;9759:32;;;3153:51:25;3126:18;;9759:32:17;3007:203:25;9713:89:17;-1:-1:-1;;;;;9815:21:17;;9811:90;;9859:31;;-1:-1:-1;;;9859:31:17;;9887:1;9859:31;;;3153:51:25;3126:18;;9859:31:17;3007:203:25;9811:90:17;-1:-1:-1;;;;;9910:18:17;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;9955:76;;;;10005:7;-1:-1:-1;;;;;9989:31:17;9998:5;-1:-1:-1;;;;;9989:31:17;;10014:5;9989:31;;;;692:25:25;;680:2;665:18;;546:177;9989:31:17;;;;;;;;9605:432;;;;:::o;5912:1107::-;-1:-1:-1;;;;;6001:18:17;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;5997:540:17;;-1:-1:-1;5997:540:17;;-1:-1:-1;;;;;6211:15:17;;6189:19;6211:15;;;;;;;;;;;6244:19;;;6240:115;;;6290:50;;-1:-1:-1;;;6290:50:17;;-1:-1:-1;;;;;9904:32:25;;6290:50:17;;;9886:51:25;9953:18;;;9946:34;;;9996:18;;;9989:34;;;9859:18;;6290:50:17;9684:345:25;6240:115:17;-1:-1:-1;;;;;6475:15:17;;:9;:15;;;;;;;;;;6493:19;;;;6475:37;;5997:540;-1:-1:-1;;;;;6551:16:17;;6547:425;;6714:12;:21;;;;;;;6547:425;;;-1:-1:-1;;;;;6925:13:17;;:9;:13;;;;;;;;;;:22;;;;;;6547:425;7002:2;-1:-1:-1;;;;;6987:25:17;6996:4;-1:-1:-1;;;;;6987:25:17;;7006:5;6987:25;;;;692::25;;680:2;665:18;;546:177;6987:25:17;;;;;;;;5912:1107;;;:::o;14:527:25:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;532:2;525;521:7;516:2;508:6;504:15;500:29;489:9;485:45;481:54;473:62;;;14:527;;;;:::o;728:173::-;796:20;;-1:-1:-1;;;;;845:31:25;;835:42;;825:70;;891:1;888;881:12;906:300;974:6;982;1035:2;1023:9;1014:7;1010:23;1006:32;1003:52;;;1051:1;1048;1041:12;1003:52;1074:29;1093:9;1074:29;:::i;:::-;1064:39;1172:2;1157:18;;;;1144:32;;-1:-1:-1;;;906:300:25:o;1403:226::-;1462:6;1515:2;1503:9;1494:7;1490:23;1486:32;1483:52;;;1531:1;1528;1521:12;1483:52;-1:-1:-1;1576:23:25;;1403:226;-1:-1:-1;1403:226:25:o;1634:186::-;1693:6;1746:2;1734:9;1725:7;1721:23;1717:32;1714:52;;;1762:1;1759;1752:12;1714:52;1785:29;1804:9;1785:29;:::i;:::-;1775:39;1634:186;-1:-1:-1;;;1634:186:25:o;1825:374::-;1902:6;1910;1918;1971:2;1959:9;1950:7;1946:23;1942:32;1939:52;;;1987:1;1984;1977:12;1939:52;2010:29;2029:9;2010:29;:::i;:::-;2000:39;;2058:38;2092:2;2081:9;2077:18;2058:38;:::i;:::-;1825:374;;2048:48;;-1:-1:-1;;;2165:2:25;2150:18;;;;2137:32;;1825:374::o;2656:346::-;2724:6;2732;2785:2;2773:9;2764:7;2760:23;2756:32;2753:52;;;2801:1;2798;2791:12;2753:52;-1:-1:-1;;2846:23:25;;;2966:2;2951:18;;;2938:32;;-1:-1:-1;2656:346:25:o;3539:260::-;3607:6;3615;3668:2;3656:9;3647:7;3643:23;3639:32;3636:52;;;3684:1;3681;3674:12;3636:52;3707:29;3726:9;3707:29;:::i;:::-;3697:39;;3755:38;3789:2;3778:9;3774:18;3755:38;:::i;:::-;3745:48;;3539:260;;;;;:::o;4200:380::-;4279:1;4275:12;;;;4322;;;4343:61;;4397:4;4389:6;4385:17;4375:27;;4343:61;4450:2;4442:6;4439:14;4419:18;4416:38;4413:161;;4496:10;4491:3;4487:20;4484:1;4477:31;4531:4;4528:1;4521:15;4559:4;4556:1;4549:15;4413:161;;4200:380;;;:::o;5905:127::-;5966:10;5961:3;5957:20;5954:1;5947:31;5997:4;5994:1;5987:15;6021:4;6018:1;6011:15;6037:128;6104:9;;;6125:11;;;6122:37;;;6139:18;;:::i;8619:125::-;8684:9;;;8705:10;;;8702:36;;;8718:18;;:::i;8749:184::-;8819:6;8872:2;8860:9;8851:7;8847:23;8843:32;8840:52;;;8888:1;8885;8878:12;8840:52;-1:-1:-1;8911:16:25;;8749:184;-1:-1:-1;8749:184:25:o;9289:168::-;9362:9;;;9393;;9410:15;;;9404:22;;9390:37;9380:71;;9431:18;;:::i;9462:217::-;9502:1;9528;9518:132;;9572:10;9567:3;9563:20;9560:1;9553:31;9607:4;9604:1;9597:15;9635:4;9632:1;9625:15;9518:132;-1:-1:-1;9664:9:25;;9462:217::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "BASIS_POINTS()": "e1f1c4a7",
        "SECONDS_PER_YEAR()": "e6a69ab8",
        "accumulatedRewards(address)": "73f273fc",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "calculateApy(uint256,uint256)": "852776b2",
        "claimRewards()": "372500ab",
        "decimals()": "313ce567",
        "emergencyWithdraw(address,uint256)": "95ccea67",
        "getAccumulatedRewards(address)": "5ee09669",
        "getContractStats()": "dfe6b5d6",
        "getMinimumStakeAmount()": "3765cf02",
        "getPendingRewards(address)": "f6ed2017",
        "getStakedBalance(address)": "3a02a42d",
        "getStakingDuration(address)": "fd6a422d",
        "getStakingInfo(address)": "aa4704f3",
        "getStakingRewardRate()": "eacdb4b4",
        "getStakingTimestamp(address)": "969de47a",
        "getTotalStaked()": "0917e776",
        "hasStakedTokens(address)": "5f5724c1",
        "minimumStakeAmount()": "6b036f45",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "pause()": "8456cb59",
        "paused()": "5c975abb",
        "renounceOwnership()": "715018a6",
        "setMinimumStakeAmount(uint256)": "0d29fcd4",
        "setStakingRewardRate(uint256)": "b7d68519",
        "stake(uint256)": "a694fc3a",
        "stakedBalances(address)": "1460fa87",
        "stakingRewardRate()": "4f3fc2df",
        "stakingTimestamp(address)": "8f0794fe",
        "symbol()": "95d89b41",
        "totalStaked()": "817b1cd2",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b",
        "unpause()": "3f4ba83a",
        "unstake(uint256)": "2e17de78"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"MinimumStakeAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"StakingRewardRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SECONDS_PER_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accumulatedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"calculateApy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rewardsClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAccumulatedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingRewardRate_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStakeAmount_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakingDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakingInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingSince\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakingTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasStakedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasStake\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinimum\",\"type\":\"uint256\"}],\"name\":\"setMinimumStakeAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setStakingRewardRate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rewardsClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with staking functionality for the NECTR ecosystem\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"calculateApy(uint256,uint256)\":{\"details\":\"Calculate APY for a given amount and duration\",\"params\":{\"amount\":\"Amount to calculate APY for\",\"duration\":\"Duration in seconds\"},\"returns\":{\"apy\":\"Calculated APY percentage (scaled by 100, e.g., 500 = 5.00%)\"}},\"claimRewards()\":{\"details\":\"Claim accumulated rewards without unstaking\",\"returns\":{\"rewardsClaimed\":\"Amount of rewards claimed\",\"success\":\"True if claim was successful\"}},\"constructor\":{\"details\":\"Constructor that mints initial supply to deployer\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"emergencyWithdraw(address,uint256)\":{\"details\":\"Emergency withdrawal function (only owner, when paused)\",\"params\":{\"amount\":\"Amount to withdraw\",\"to\":\"Address to send tokens to\"},\"returns\":{\"success\":\"True if withdrawal was successful\"}},\"getAccumulatedRewards(address)\":{\"details\":\"Get accumulated rewards for a specific user\",\"params\":{\"user\":\"Address to check\"},\"returns\":{\"rewards\":\"Amount of accumulated rewards\"}},\"getContractStats()\":{\"details\":\"Get contract stats for frontend display\",\"returns\":{\"minimumStakeAmount_\":\"Minimum amount required to stake\",\"stakingRewardRate_\":\"Current reward rate in basis points\",\"totalStaked_\":\"Total tokens currently staked\",\"totalSupply_\":\"Total token supply\"}},\"getMinimumStakeAmount()\":{\"details\":\"Get minimum stake amount\",\"returns\":{\"minimum\":\"Minimum amount required to stake\"}},\"getPendingRewards(address)\":{\"details\":\"Get pending rewards for a user\",\"params\":{\"user\":\"Address to check rewards for\"},\"returns\":{\"pendingRewards\":\"Pending rewards amount\"}},\"getStakedBalance(address)\":{\"details\":\"Get staked balance for a specific user\",\"params\":{\"user\":\"Address to check\"},\"returns\":{\"balance\":\"Amount of tokens staked by the user\"}},\"getStakingDuration(address)\":{\"details\":\"Get staking duration for a user\",\"params\":{\"user\":\"Address to check\"},\"returns\":{\"duration\":\"Time in seconds since staking started\"}},\"getStakingInfo(address)\":{\"details\":\"Get comprehensive staking info for a user\",\"params\":{\"user\":\"Address to get info for\"},\"returns\":{\"pendingRewards\":\"Pending rewards\",\"stakedAmount\":\"Amount currently staked\",\"stakingSince\":\"Timestamp when staking started\"}},\"getStakingRewardRate()\":{\"details\":\"Get current staking reward rate\",\"returns\":{\"rate\":\"Current reward rate in basis points\"}},\"getStakingTimestamp(address)\":{\"details\":\"Get staking timestamp for a specific user\",\"params\":{\"user\":\"Address to check\"},\"returns\":{\"timestamp\":\"When the user started staking (or last updated)\"}},\"getTotalStaked()\":{\"details\":\"Get total amount of staked tokens\",\"returns\":{\"total\":\"Total tokens currently staked in the contract\"}},\"hasStakedTokens(address)\":{\"details\":\"Check if user has any staked tokens\",\"params\":{\"user\":\"Address to check\"},\"returns\":{\"hasStake\":\"True if user has tokens staked\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pause contract (only owner)\",\"returns\":{\"success\":\"True if pause was successful\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setMinimumStakeAmount(uint256)\":{\"details\":\"Set minimum stake amount (only owner)\",\"params\":{\"newMinimum\":\"New minimum stake amount\"},\"returns\":{\"success\":\"True if update was successful\"}},\"setStakingRewardRate(uint256)\":{\"details\":\"Update staking reward rate (only owner)\",\"params\":{\"newRate\":\"New reward rate in basis points (e.g., 500 = 5%)\"},\"returns\":{\"success\":\"True if update was successful\"}},\"stake(uint256)\":{\"details\":\"Stake tokens to earn rewards\",\"params\":{\"amount\":\"Amount of tokens to stake\"},\"returns\":{\"success\":\"True if staking was successful\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpause contract (only owner)\",\"returns\":{\"success\":\"True if unpause was successful\"}},\"unstake(uint256)\":{\"details\":\"Unstake tokens and claim rewards\",\"params\":{\"amount\":\"Amount of tokens to unstake\"},\"returns\":{\"rewardsClaimed\":\"Amount of rewards claimed\",\"success\":\"True if unstaking was successful\"}}},\"title\":\"NECTRToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract allows users to stake NECTR tokens and earn rewards\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/NECTRToken.sol\":\"NECTRToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"src/NECTRToken.sol\":{\"keccak256\":\"0x21f1c6894dcc28f66d3e3791e8dd4394bc29bc7c1f980d6183627fc173f527f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0141126ccf0a3950866c6a59e980f2c4bfe1106d5c710714eb350cfbcd09345\",\"dweb:/ipfs/QmPqNELsMFPDq438yTi9rtPN7k3dDM54JsJZ1mji87kgvU\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.28+commit.7893614a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "allowance",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "needed",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InsufficientAllowance"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "balance",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "needed",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InsufficientBalance"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "approver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidApprover"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidReceiver"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidSender"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidSpender"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "EnforcedPause"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ExpectedPause"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "OwnableInvalidOwner"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "OwnableUnauthorizedAccount"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ReentrancyGuardReentrantCall"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "oldAmount",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newAmount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "MinimumStakeAmountUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OwnershipTransferred",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Paused",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "RewardsClaimed",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "timestamp",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Staked",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "oldRate",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "newRate",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "StakingRewardRateUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Unpaused",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "rewards",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Unstaked",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "BASIS_POINTS",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "SECONDS_PER_YEAR",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "accumulatedRewards",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "allowance",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approve",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "duration",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "calculateApy",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "apy",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "claimRewards",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "success",
                            "type": "bool"
                        },
                        {
                            "internalType": "uint256",
                            "name": "rewardsClaimed",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "decimals",
                    "outputs": [
                        {
                            "internalType": "uint8",
                            "name": "",
                            "type": "uint8"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "emergencyWithdraw",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "success",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAccumulatedRewards",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "rewards",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getContractStats",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "totalSupply_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "totalStaked_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "stakingRewardRate_",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "minimumStakeAmount_",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getMinimumStakeAmount",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "minimum",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getPendingRewards",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "pendingRewards",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getStakedBalance",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "balance",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getStakingDuration",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "duration",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getStakingInfo",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "stakedAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "pendingRewards",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "stakingSince",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getStakingRewardRate",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "rate",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getStakingTimestamp",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "timestamp",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTotalStaked",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "total",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "hasStakedTokens",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "hasStake",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "minimumStakeAmount",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "name",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "owner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "pause",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "success",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "paused",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "renounceOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "newMinimum",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setMinimumStakeAmount",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "success",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "newRate",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setStakingRewardRate",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "success",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "stake",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "success",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "stakedBalances",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "stakingRewardRate",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "stakingTimestamp",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "symbol",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalStaked",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transfer",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFrom",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferOwnership"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unpause",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "success",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unstake",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "success",
                            "type": "bool"
                        },
                        {
                            "internalType": "uint256",
                            "name": "rewardsClaimed",
                            "type": "uint256"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "allowance(address,address)": {
                        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
                    },
                    "approve(address,uint256)": {
                        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
                    },
                    "balanceOf(address)": {
                        "details": "Returns the value of tokens owned by `account`."
                    },
                    "calculateApy(uint256,uint256)": {
                        "details": "Calculate APY for a given amount and duration",
                        "params": {
                            "amount": "Amount to calculate APY for",
                            "duration": "Duration in seconds"
                        },
                        "returns": {
                            "apy": "Calculated APY percentage (scaled by 100, e.g., 500 = 5.00%)"
                        }
                    },
                    "claimRewards()": {
                        "details": "Claim accumulated rewards without unstaking",
                        "returns": {
                            "rewardsClaimed": "Amount of rewards claimed",
                            "success": "True if claim was successful"
                        }
                    },
                    "constructor": {
                        "details": "Constructor that mints initial supply to deployer"
                    },
                    "decimals()": {
                        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
                    },
                    "emergencyWithdraw(address,uint256)": {
                        "details": "Emergency withdrawal function (only owner, when paused)",
                        "params": {
                            "amount": "Amount to withdraw",
                            "to": "Address to send tokens to"
                        },
                        "returns": {
                            "success": "True if withdrawal was successful"
                        }
                    },
                    "getAccumulatedRewards(address)": {
                        "details": "Get accumulated rewards for a specific user",
                        "params": {
                            "user": "Address to check"
                        },
                        "returns": {
                            "rewards": "Amount of accumulated rewards"
                        }
                    },
                    "getContractStats()": {
                        "details": "Get contract stats for frontend display",
                        "returns": {
                            "minimumStakeAmount_": "Minimum amount required to stake",
                            "stakingRewardRate_": "Current reward rate in basis points",
                            "totalStaked_": "Total tokens currently staked",
                            "totalSupply_": "Total token supply"
                        }
                    },
                    "getMinimumStakeAmount()": {
                        "details": "Get minimum stake amount",
                        "returns": {
                            "minimum": "Minimum amount required to stake"
                        }
                    },
                    "getPendingRewards(address)": {
                        "details": "Get pending rewards for a user",
                        "params": {
                            "user": "Address to check rewards for"
                        },
                        "returns": {
                            "pendingRewards": "Pending rewards amount"
                        }
                    },
                    "getStakedBalance(address)": {
                        "details": "Get staked balance for a specific user",
                        "params": {
                            "user": "Address to check"
                        },
                        "returns": {
                            "balance": "Amount of tokens staked by the user"
                        }
                    },
                    "getStakingDuration(address)": {
                        "details": "Get staking duration for a user",
                        "params": {
                            "user": "Address to check"
                        },
                        "returns": {
                            "duration": "Time in seconds since staking started"
                        }
                    },
                    "getStakingInfo(address)": {
                        "details": "Get comprehensive staking info for a user",
                        "params": {
                            "user": "Address to get info for"
                        },
                        "returns": {
                            "pendingRewards": "Pending rewards",
                            "stakedAmount": "Amount currently staked",
                            "stakingSince": "Timestamp when staking started"
                        }
                    },
                    "getStakingRewardRate()": {
                        "details": "Get current staking reward rate",
                        "returns": {
                            "rate": "Current reward rate in basis points"
                        }
                    },
                    "getStakingTimestamp(address)": {
                        "details": "Get staking timestamp for a specific user",
                        "params": {
                            "user": "Address to check"
                        },
                        "returns": {
                            "timestamp": "When the user started staking (or last updated)"
                        }
                    },
                    "getTotalStaked()": {
                        "details": "Get total amount of staked tokens",
                        "returns": {
                            "total": "Total tokens currently staked in the contract"
                        }
                    },
                    "hasStakedTokens(address)": {
                        "details": "Check if user has any staked tokens",
                        "params": {
                            "user": "Address to check"
                        },
                        "returns": {
                            "hasStake": "True if user has tokens staked"
                        }
                    },
                    "name()": {
                        "details": "Returns the name of the token."
                    },
                    "owner()": {
                        "details": "Returns the address of the current owner."
                    },
                    "pause()": {
                        "details": "Pause contract (only owner)",
                        "returns": {
                            "success": "True if pause was successful"
                        }
                    },
                    "paused()": {
                        "details": "Returns true if the contract is paused, and false otherwise."
                    },
                    "renounceOwnership()": {
                        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
                    },
                    "setMinimumStakeAmount(uint256)": {
                        "details": "Set minimum stake amount (only owner)",
                        "params": {
                            "newMinimum": "New minimum stake amount"
                        },
                        "returns": {
                            "success": "True if update was successful"
                        }
                    },
                    "setStakingRewardRate(uint256)": {
                        "details": "Update staking reward rate (only owner)",
                        "params": {
                            "newRate": "New reward rate in basis points (e.g., 500 = 5%)"
                        },
                        "returns": {
                            "success": "True if update was successful"
                        }
                    },
                    "stake(uint256)": {
                        "details": "Stake tokens to earn rewards",
                        "params": {
                            "amount": "Amount of tokens to stake"
                        },
                        "returns": {
                            "success": "True if staking was successful"
                        }
                    },
                    "symbol()": {
                        "details": "Returns the symbol of the token, usually a shorter version of the name."
                    },
                    "totalSupply()": {
                        "details": "Returns the value of tokens in existence."
                    },
                    "transfer(address,uint256)": {
                        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
                    },
                    "transferFrom(address,address,uint256)": {
                        "details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
                    },
                    "transferOwnership(address)": {
                        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
                    },
                    "unpause()": {
                        "details": "Unpause contract (only owner)",
                        "returns": {
                            "success": "True if unpause was successful"
                        }
                    },
                    "unstake(uint256)": {
                        "details": "Unstake tokens and claim rewards",
                        "params": {
                            "amount": "Amount of tokens to unstake"
                        },
                        "returns": {
                            "rewardsClaimed": "Amount of rewards claimed",
                            "success": "True if unstaking was successful"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@openzeppelin/=lib/openzeppelin-contracts/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/NECTRToken.sol": "NECTRToken"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
                "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
                "urls": [
                    "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
                    "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
                "keccak256": "0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e",
                "urls": [
                    "bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23",
                    "dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
                "keccak256": "0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994",
                "urls": [
                    "bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c",
                    "dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
                "urls": [
                    "bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
                    "dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
                "keccak256": "0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f",
                "urls": [
                    "bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e",
                    "dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
                "urls": [
                    "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
                    "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Pausable.sol": {
                "keccak256": "0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f",
                "urls": [
                    "bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c",
                    "dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
                "keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
                "urls": [
                    "bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
                    "dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
                ],
                "license": "MIT"
            },
            "src/NECTRToken.sol": {
                "keccak256": "0x21f1c6894dcc28f66d3e3791e8dd4394bc29bc7c1f980d6183627fc173f527f3",
                "urls": [
                    "bzz-raw://d0141126ccf0a3950866c6a59e980f2c4bfe1106d5c710714eb350cfbcd09345",
                    "dweb:/ipfs/QmPqNELsMFPDq438yTi9rtPN7k3dDM54JsJZ1mji87kgvU"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 24
}